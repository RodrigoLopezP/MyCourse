@model CourseListViewModel
@{
    int totPages = (int)Math.Ceiling(Model.Courses.TotalCount / (decimal)Model.Input.Limit);
    <!--ottengo quante pagine far visualizzare-->
    int currentPage = Model.Input.Page;
}

<nav aria-label="Paginazione">
    <ul class="pagination d-flex justify-content-center" >
        <!---Se la pagina corrente è maggiore a 1, allora ci sarà il btn per la pag prec. il math max è per assicurasi che nessuno metta nella url query meno1 o meno3--->
        @if (Math.Max(currentPage, 1) > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-route-page="@(currentPage-1)">
                    <i class="fas fa-arrow-left"></i>
                </a>
            </li>
        }
        <!-- dalla pag corrente -4, fino alla pag corrente +4 , fammi vedere dei buttons con in numerini-->
        @for (int p = Math.Max(1, currentPage - 4); p <= Math.Min(totPages, currentPage + 4); p++)
        {
            if (p == currentPage)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" asp-route-page="@p"
                    asp-route-search="@Model.Input.Search"
                    asp-route-orderby="@Model.Input.OrderBy"
                    asp-route-ascending="@Model.Input.Ascending"
                    > @p <span class="sr-only">(current)</span></a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-route-page="@p"
                    asp-route-search="@Model.Input.Search"
                    asp-route-orderby="@Model.Input.OrderBy"
                    asp-route-ascending="@Model.Input.Ascending"
                    >@p</a>
                </li>
            }
        }
        <!---Se la pagina corrente è minore al max di pag, allora ci sarà il btn per la prx pag--->
        @if (currentPage<totPages) 
        {
        <li class="page-item">
            <a class="page-link" asp-route-page="@(currentPage+1)"
                    asp-route-search="@Model.Input.Search"
                    asp-route-orderby="@Model.Input.OrderBy"
                    asp-route-ascending="@Model.Input.Ascending">
                <i class="fas fa-arrow-right"></i>
            </a>
        </li>
        }
    </ul>
</nav>