@using System.Security.Claims
@model PersonalCoursesViewModel
@inject IAuthorizationService authService
@{
  AuthorizationPolicy policy = new AuthorizationPolicyBuilder().RequireRole(nameof(Role.Teacher)).Build();
  AuthorizationResult authorizationResult = await authService.AuthorizeAsync(User, policy);
  bool canCreate = authorizationResult.Succeeded;

  ILookup<string, CourseViewModel> courseGroups = Model.AuthoredCourses.ToLookup(course => ((int)course.Status).ToString());
  ViewData["AuthorId"] = User.FindFirstValue(ClaimTypes.NameIdentifier);
}
<h1>@ViewData["Title"]
    @if (canCreate)
    {
      <a class="btn btn-outline-primary btn-sm" asp-action="Create"><i class="fa fa-plus"></i> Crea nuovo</a>
    }
</h1>
<ul class="nav nav-tabs" id="myCoursesTabs" role="tablist">
  <li class="nav-item">
    <a class="nav-link active" id="subscriber-tab" data-toggle="tab" href="#subscriber" role="tab" aria-controls="subscriber" aria-selected="true">Studente</a>
  </li>
  <li class="nav-item">
    <a class="nav-link" id="author-tab" data-toggle="tab" href="#author" role="tab" aria-controls="author" aria-selected="false">Docente</a>
  </li>
</ul>
<div class="tab-content mt-3" id="myCoursesTabs">
  <div class="tab-pane fade show active" id="subscriber" role="tabpanel" aria-labelledby="home-tab">
    <h2 class="mt-3">Corsi a cui ti sei iscritto</h2>
    @foreach (CourseViewModel course in Model.SubscribedCourses)
    {
      <partial name="Courses/_CourseLine" model="@course"></partial>
    }
    @if (!Model.SubscribedCourses.Any())
    {
      <p class="text-muted">Non ci sono corsi</p>
    }
  </div>
  <div class="tab-pane fade" id="author" role="tabpanel" aria-labelledby="home-tab">
    @foreach(SelectListItem item in Html.GetEnumSelectList<CourseStatus>())
    {
      @if (courseGroups[item.Value].Any())
      {
        <h2 class="mt-3">@item.Text</h2>
        @foreach (CourseViewModel course in courseGroups[item.Value])
        {
          <partial name="Courses/_CourseLine" model="@course"></partial>
        }
      }
    }
    @if (!Model.AuthoredCourses.Any())
    {
      <p class="text-muted">Non ci sono corsi</p>
    }
  </div>
</div>